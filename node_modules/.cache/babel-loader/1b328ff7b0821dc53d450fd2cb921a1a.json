{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/Content.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Modal from '@material-ui/core/Modal';\nimport AddProperty from '../forms/AddProperty';\nimport PropertyDetails from './PropertyDetails';\nimport { Route, Link } from 'react-router-dom';\nimport styles from '../../styles/ContentStyle';\nimport PropertyCard from './PropertyCard';\nconst POST_URL = 'http://localhost:3001/properties'; //related to the modal\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n} //related to the modal\n\n\nfunction getModalStyle() {\n  const top = 35 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n} //related to the modal\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Content(props) {\n  //check to see if we should show the details of a property\n  const [details, setDetails] = useState(false); //load the properties in a state\n\n  const [properties, setProperties] = useState(props.properties ? props.properties : []); //related to the modal\n\n  const layout = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleAddProperty = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //function called when the user click in the trash bin\n\n\n  const handleDeleteProperty = id => {\n    fetch(`${POST_URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => {\n      setProperties(properties.filter(p => p.id !== id));\n      props.handlePropertyState(res.data, 'delete');\n    });\n  }; //function called when add a new property \n\n\n  const addNewProperty = (e, value) => {\n    value = { ...value,\n      landlord_id: props.user.id\n    };\n    fetch(POST_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(value)\n    }).then(res => res.json()).then(data => {\n      handleClose();\n      setProperties([...properties, data.property]); //send the information back to App.js to update the state\n\n      props.handlePropertyState(data.property, 'add');\n    });\n  };\n\n  const body =\n  /*#__PURE__*/\n  //whats going to be inside the modal\n  React.createElement(\"div\", {\n    style: modalStyle,\n    className: layout.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddProperty, {\n    addNewProperty: addNewProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  })); //end of related stuff to modal\n  //render all properties\n\n  const renderProperties = () => {\n    if (properties.length === 0) {\n      return /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, \"You don't have any properties yet\");\n    } //render individual property cards\n    else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.propertyGrid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }\n        }, properties.map(property => /*#__PURE__*/React.createElement(PropertyCard, {\n          property: property,\n          classes: classes,\n          handleDeleteProperty: handleDeleteProperty,\n          handlePropertyClick: id => setDetails(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 41\n          }\n        }))));\n      }\n  };\n\n  const {\n    classes\n  } = props; //function => render all properties\n\n  const renderNoDetails = () => {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      className: classes.searchBar,\n      position: \"static\",\n      color: \"default\",\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      className: classes.block,\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      placeholder: \"Search by address\",\n      InputProps: {\n        disableUnderline: true,\n        className: classes.searchInput\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.addUser,\n      onClick: handleAddProperty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \"Add Property\"), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Reload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RefreshIcon, {\n      className: classes.block,\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.contentWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, renderProperties()), /*#__PURE__*/React.createElement(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, body));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, !details ? renderNoDetails() : /*#__PURE__*/React.createElement(PropertyDetails, {\n    property: details,\n    showAllProperties: () => setDetails(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }));\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/Content.js"],"names":["React","useState","PropTypes","AppBar","Toolbar","Typography","Paper","Grid","Button","TextField","Tooltip","IconButton","withStyles","makeStyles","SearchIcon","RefreshIcon","Modal","AddProperty","PropertyDetails","Route","Link","styles","PropertyCard","POST_URL","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Content","props","details","setDetails","properties","setProperties","layout","modalStyle","open","setOpen","handleAddProperty","handleClose","handleDeleteProperty","id","fetch","method","headers","then","res","json","filter","p","handlePropertyState","data","addNewProperty","e","value","landlord_id","user","body","JSON","stringify","property","renderProperties","length","classes","propertyGrid","map","renderNoDetails","searchBar","block","disableUnderline","className","searchInput","addUser","contentWrapper","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Modal from '@material-ui/core/Modal';\nimport AddProperty from '../forms/AddProperty'\nimport PropertyDetails from './PropertyDetails'\nimport { Route, Link } from 'react-router-dom';\nimport styles from '../../styles/ContentStyle'\nimport PropertyCard from './PropertyCard'\n\nconst POST_URL = 'http://localhost:3001/properties';\n\n\n//related to the modal\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\n//related to the modal\nfunction getModalStyle() {\n  const top = 35 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n//related to the modal\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Content(props) {\n  //check to see if we should show the details of a property\n  const [details, setDetails] = useState(false);\n\n  //load the properties in a state\n  const [properties, setProperties] = useState(props.properties ? props.properties : []);\n  \n  //related to the modal\n  const layout = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleAddProperty = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //function called when the user click in the trash bin\n  const handleDeleteProperty = (id) => {\n    \n    fetch(`${POST_URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    })\n    .then(res => res.json())\n    .then((res) => {\n      setProperties(properties.filter(p => p.id !== id));\n      props.handlePropertyState(res.data, 'delete');\n    } );\n  }\n\n  //function called when add a new property \n  const addNewProperty = (e, value) => {\n    value = {\n      ...value,\n      landlord_id : props.user.id\n    }\n        fetch(POST_URL, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(value)\n        })\n        .then(res => res.json())\n        .then(data => {\n          handleClose();\n          setProperties([...properties, data.property]);\n\n          //send the information back to App.js to update the state\n          props.handlePropertyState(data.property, 'add');\n          \n        });\n  }\n\n  const body = (//whats going to be inside the modal\n    <div style={modalStyle} className={layout.paper}>\n      <AddProperty addNewProperty={addNewProperty}/>\n    </div>\n  );\n\n  //end of related stuff to modal\n\n  //render all properties\n  const renderProperties = () => {\n  \n    if (properties.length === 0) {\n      return (\n        <Typography color=\"textSecondary\" align=\"center\">\n            You don't have any properties yet\n        </Typography>\n      )\n    }\n    //render individual property cards\n    else{\n      return (\n        <div className={classes.propertyGrid}>\n          <Grid container spacing={1}>\n            {properties.map(property => <PropertyCard property={property} classes={classes} handleDeleteProperty={handleDeleteProperty} handlePropertyClick={(id) => setDetails(id)}/> )}\n          </Grid>\n        </div>\n      )\n    }\n  }\n\n  const { classes } = props;\n\n  //function => render all properties\n  const renderNoDetails = () => {\n    return (\n      <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <SearchIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Search by address\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n              />\n            </Grid>\n            <Grid item>\n            {/* Button to open modal to add a new property */}\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser} onClick={handleAddProperty}>\n                Add Property\n              </Button>\n              <Tooltip title=\"Reload\">\n                <IconButton>\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        {renderProperties()}\n      </div>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </Paper>\n    )\n  }\n\n  return (\n    <React.Fragment>\n\n    \n    {!details ? renderNoDetails() : <PropertyDetails property={details} showAllProperties={() => setDetails(false)}/> } \n\n      \n      \n  </React.Fragment>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);"]},"metadata":{},"sourceType":"module"}