{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/App.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\nimport Paperbase from './components/dashboard/Paperbase';\nimport { withRouter } from \"react-router\";\nimport './App.css';\nimport { loginUser, handleClickLogOut } from './API/APIs';\nimport { connect } from 'react-redux';\n\nfunction App({\n  props\n}) {\n  const {\n    setLogOutState,\n    setLogInData,\n    isLoggedIn,\n    landlord,\n    issues,\n    tenants,\n    todos,\n    properties\n  } = props;\n  useEffect(() => {\n    loginStatus();\n  });\n\n  const loginStatus = () => {\n    loginUser(handleLogin, handleLogout).catch(error => console.log('api errors:', error));\n  };\n\n  const handleLogin = data => {\n    setLogInData(data);\n  };\n\n  const handleLogout = () => {\n    setLogOutState(\"logout\");\n    props.history.push('/login');\n  }; //update the properties state after a property been deleted\n\n\n  const handlePropertyState = (property, action) => {\n    if (action === 'add') {\n      this.setState({\n        properties: [...this.state.properties, property]\n      });\n    } else if (action === 'delete') {\n      this.setState({\n        properties: this.state.properties.filter(p => p.id !== property.id)\n      });\n    }\n  };\n\n  const handleClick = () => {\n    handleClickLogOut().then(response => {\n      this.handleLogout();\n      this.history.push('/login');\n    }).catch(error => console.log(error));\n  };\n\n  const renderDashboard = () => {\n    return /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: routeProps => /*#__PURE__*/React.createElement(Paperbase, Object.assign({}, routeProps, {\n        logout: () => handleClick(),\n        user: landlord,\n        properties: properties,\n        issues: issues,\n        tenants: tenants,\n        handlePropertyState: handlePropertyState,\n        todos: todos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 43\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, isLoggedIn ? renderDashboard() : /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n      handleLogin: handleLogin,\n      setValueAccess: setValueAccess,\n      loggedInStatus: isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n      handleLogin: handleLogin,\n      loggedInStatus: isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    landlord: state.landlord,\n    issues: state.issues,\n    tenants: state.tenants,\n    todos: state.todos,\n    properties: state.properties\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLogInData: data => dispatch({\n      type: \"SET_LOGIN_STATES\",\n      payload: {\n        data\n      }\n    }),\n    setLogOutState: data => dispatch({\n      type: \"SET_LOG_OUT\",\n      payload: {\n        data\n      }\n    }),\n    addProperty: property => dispatch({\n      type: \"ADD_PROPERTY\",\n      payload: {\n        property\n      }\n    }),\n    deleteProperty: property => dispatch({\n      type: \"DELETE_PROPERTY\",\n      payload: {\n        property\n      }\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/App.js"],"names":["React","useEffect","axios","Switch","Route","Login","Signup","Paperbase","withRouter","loginUser","handleClickLogOut","connect","App","props","setLogOutState","setLogInData","isLoggedIn","landlord","issues","tenants","todos","properties","loginStatus","handleLogin","handleLogout","catch","error","console","log","data","history","push","handlePropertyState","property","action","setState","state","filter","p","id","handleClick","then","response","renderDashboard","routeProps","setValueAccess","mapStateToProps","mapDispatchToProps","dispatch","type","payload","addProperty","deleteProperty"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios'\nimport { Switch, Route} from 'react-router-dom'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\nimport Paperbase from './components/dashboard/Paperbase'\nimport {withRouter} from \"react-router\";\nimport './App.css';\nimport {loginUser, handleClickLogOut} from './API/APIs'\nimport { connect } from 'react-redux';\n\n\nfunction App({props}){\n\n  const {setLogOutState, setLogInData, isLoggedIn , landlord, issues, tenants, todos, properties} = props\n\n\nuseEffect(() =>{\n  loginStatus()\n})\n  \n\n\nconst loginStatus = () => {\n  loginUser(handleLogin, handleLogout)\n  .catch(error => console.log('api errors:', error))\n}\n\n\nconst handleLogin = (data) => {\n setLogInData(data)\n  \n}\n\nconst handleLogout = () => {\n  setLogOutState(\"logout\")\n\n  props.history.push('/login')\n\n}\n\n//update the properties state after a property been deleted\nconst handlePropertyState = (property, action) => {\n  if (action === 'add'){\n    this.setState({\n      properties: [...this.state.properties, property]\n    })\n  }else if (action === 'delete'){\n    this.setState({\n      properties: this.state.properties.filter(p => p.id !== property.id)\n    })\n  }\n}\n\n\n const handleClick = () =>{\n\n handleClickLogOut()\n  .then(response => {\n    this.handleLogout()\n\n  this.history.push('/login')\n\n  })\n  .catch(error => console.log(error))\n}\n\nconst renderDashboard = () => {\n\n  return (\n\n    <Route path=\"/\" render={routeProps => <Paperbase {...routeProps} logout={() => handleClick()} \n    user={landlord} \n    properties={properties} \n    issues={issues} \n    tenants={tenants}\n    handlePropertyState={handlePropertyState}\n    todos={todos}\n    />    } />\n\n  \n  )\n  \n}\n\n\n\n  return (\n    <div>\n        { \n          isLoggedIn\n          ? renderDashboard() \n          : <Switch>\n            <Route \n              exact path='/login' \n              render={props => (\n                <Login {...props} handleLogin={handleLogin} setValueAccess={setValueAccess }  loggedInStatus={isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n                <Signup {...props} handleLogin={handleLogin} \n                loggedInStatus={isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        }\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    landlord: state.landlord,\n    issues: state.issues,\n    tenants: state.tenants,\n    todos: state.todos,\n    properties: state.properties\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLogInData: data => dispatch({type: \"SET_LOGIN_STATES\", payload: {data}}),\n    setLogOutState: data => dispatch({type: \"SET_LOG_OUT\", payload: {data}}),\n    addProperty: property => dispatch({type: \"ADD_PROPERTY\", payload: {property}}),\n    deleteProperty: property => dispatch({type: \"DELETE_PROPERTY\", payload: {property}})\n\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (withRouter(App))"]},"metadata":{},"sourceType":"module"}