{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/App.js\";\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\nimport Paperbase from './components/dashboard/Paperbase';\nimport { withRouter } from \"react-router\";\nimport './App.css';\nimport { loginUser, handleClickLogOut } from './API/APIs';\nimport { connect } from 'react-redux';\n\nfunction App({\n  props\n}) {\n  const {\n    setLogOutState,\n    setLogInData\n  } = props;\n  useEffect(() => {\n    loginStatus();\n  });\n\n  const loginStatus = () => {\n    loginUser(handleLogin, handleLogout).catch(error => console.log('api errors:', error));\n  };\n\n  const handleLogin = data => {\n    setLogInData(data);\n  };\n\n  const handleLogout = () => {\n    ///handel log out \n    props.history.push('/login');\n  };\n\n  setValueAccess = value => {\n    value == 'landlord' ? this.setState({\n      landlordLogin: true\n    }) : this.setState({\n      landlordLogin: false\n    });\n  }; //update the properties state after a property been deleted\n\n\n  handlePropertyState = (property, action) => {\n    if (action === 'add') {\n      this.setState({\n        properties: [...this.state.properties, property]\n      });\n    } else if (action === 'delete') {\n      this.setState({\n        properties: this.state.properties.filter(p => p.id !== property.id)\n      });\n    }\n  };\n\n  handleClick = () => {\n    handleClickLogOut().then(response => {\n      this.handleLogout();\n      this.history.push('/login');\n    }).catch(error => console.log(error));\n  };\n\n  renderDashboard = () => {\n    const {\n      issues,\n      tenants,\n      todos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: routeProps => /*#__PURE__*/React.createElement(Paperbase, Object.assign({}, routeProps, {\n        logout: () => this.handleClick(),\n        user: this.state.landlord,\n        properties: this.state.properties,\n        issues: issues,\n        tenants: tenants,\n        handlePropertyState: this.handlePropertyState,\n        todos: todos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, this.state.isLoggedIn ? this.renderDashboard() : /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n      handleLogin: this.handleLogin,\n      setValueAccess: this.setValueAccess,\n      loggedInStatus: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n      setValueAccess: this.setValueAccess,\n      handleLogin: this.handleLogin,\n      loggedInStatus: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    bots: state.bots\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLogInData: data => dispatch({\n      type: \"SET_LOGIN_STATES\",\n      payload: {\n        data\n      }\n    }),\n    setLogOutState: data => dispatch({\n      type: \"SET_LOG_OUT\",\n      payload: {\n        data\n      }\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/App.js"],"names":["React","useEffect","axios","Switch","Route","Login","Signup","Paperbase","withRouter","loginUser","handleClickLogOut","connect","App","props","setLogOutState","setLogInData","loginStatus","handleLogin","handleLogout","catch","error","console","log","data","history","push","setValueAccess","value","setState","landlordLogin","handlePropertyState","property","action","properties","state","filter","p","id","handleClick","then","response","renderDashboard","issues","tenants","todos","routeProps","landlord","isLoggedIn","mapStateToProps","bots","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios'\nimport { Switch, Route} from 'react-router-dom'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\nimport Paperbase from './components/dashboard/Paperbase'\nimport {withRouter} from \"react-router\";\nimport './App.css';\nimport {loginUser, handleClickLogOut} from './API/APIs'\nimport { connect } from 'react-redux';\n\n\nfunction App({props}){\n\n  const {setLogOutState, setLogInData} = props\n\n\nuseEffect(() =>{\n  loginStatus()\n})\n  \n\n\nconst loginStatus = () => {\n  loginUser(handleLogin, handleLogout)\n  .catch(error => console.log('api errors:', error))\n}\n\n\nconst handleLogin = (data) => {\n setLogInData(data)\n  \n}\n\nconst handleLogout = () => {\n  ///handel log out \n\n  props.history.push('/login')\n\n}\n\nsetValueAccess = (value) => {\n  value == 'landlord' ? this.setState({landlordLogin:true}) : this.setState({landlordLogin:false})\n  \n}\n\n//update the properties state after a property been deleted\nhandlePropertyState = (property, action) => {\n  if (action === 'add'){\n    this.setState({\n      properties: [...this.state.properties, property]\n    })\n  }else if (action === 'delete'){\n    this.setState({\n      properties: this.state.properties.filter(p => p.id !== property.id)\n    })\n  }\n}\n\n\n handleClick = () =>{\n\n  handleClickLogOut()\n  .then(response => {\n    this.handleLogout()\n\n  this.history.push('/login')\n\n  })\n  .catch(error => console.log(error))\n}\n\nrenderDashboard = () => {\n  const {issues, tenants, todos} = this.state\n  return (\n\n    <Route path=\"/\" render={routeProps => <Paperbase {...routeProps} logout={() => this.handleClick()} \n    user={this.state.landlord} \n    properties={this.state.properties} \n    issues={issues} \n    tenants={tenants}\n    handlePropertyState={this.handlePropertyState}\n    todos={todos}\n    />    } />\n\n  \n  )\n  \n}\n\n\n\n  return (\n    <div>\n        { \n          this.state.isLoggedIn\n          ? this.renderDashboard() \n          : <Switch>\n            <Route \n              exact path='/login' \n              render={props => (\n                <Login {...props} handleLogin={this.handleLogin} setValueAccess={this.setValueAccess }  loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n                <Signup {...props} setValueAccess={this.setValueAccess } handleLogin={this.handleLogin} \n                loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        }\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = state => {\n  return {\n    bots: state.bots\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLogInData: data => dispatch({type: \"SET_LOGIN_STATES\", payload: {data}}),\n    setLogOutState: data => dispatch({type: \"SET_LOG_OUT\", payload: {data}})\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (withRouter(App))"]},"metadata":{},"sourceType":"module"}