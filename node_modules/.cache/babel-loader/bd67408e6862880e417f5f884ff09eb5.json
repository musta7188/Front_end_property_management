{"ast":null,"code":"var _jsxFileName = \"/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/PropertyDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddTenant from '../forms/AddTenant';\nimport Divider from '@material-ui/core/Divider';\nconst POST_TENANTS_URL = 'http://localhost:3001/tenants';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n}); //related to the modal\n\nfunction getModalStyle() {\n  const top = 30;\n  const left = 40;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n} //related to the modal\n\n\nconst modalStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function PropertyDetails({\n  property,\n  showAllProperties,\n  history\n}) {\n  const styles = useStyles(); //related to the modal\n\n  const layout = modalStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false); //load the property details\n\n  const [details, setDetails] = useState(0);\n  const [tenants, setTenants] = useState(0);\n  const [issues, setIssues] = useState(0);\n  const [todos, setTodos] = useState(0);\n  useEffect(() => {\n    const url = `http://localhost:3001/properties/${property}`;\n    fetch(url).then(res => res.json()).then(data => {\n      setDetails(data.property);\n      setTenants(data.tenants);\n      setTodos(data.todos);\n      setIssues(data.issues);\n    });\n  }, []); //close the modal\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // render the details after is loaded\n\n\n  const renderDetails = () => {\n    const newTenants = tenants.map(obj => ({\n      \"Full Name\": obj.first_name + \" \" + obj.last_name,\n      \"Date of Birth\": obj.dob,\n      Email: obj.email\n    }));\n    const newIssues = issues.map(obj => ({\n      Message: obj.message,\n      Priority: obj.priority,\n      Completed: obj.isCompleted.toString().replace('false', 'No').replace('true', 'Yes')\n    }));\n    const newTodos = todos.map(obj => ({\n      Message: obj.message,\n      Completed: obj.isCompleted.toString().replace('false', 'No').replace('true', 'Yes')\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, details.address), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Tenants at this property:\"), tenants.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }, \"No tenants yet\") : generateTable(newTenants), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => setOpen(true),\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Add New Tenant\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Issues on this property:\"), issues.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 40\n      }\n    }, \"No issues for this property yet\") : generateTable(newIssues), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Todos for this property:\"), todos.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 39\n      }\n    }, \"No todos for this property yet\") : generateTable(newTodos), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 38\n      }\n    }));\n  }; //generate table for each state (tenants, issues, and todos)\n\n\n  const generateTable = newTenants => {\n    const keys = Object.keys(newTenants[0]);\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: styles.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, keys.map(k => /*#__PURE__*/React.createElement(TableCell, {\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, k)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, newTenants.map(row => renderRows(row, keys)))));\n  };\n\n  const renderRows = (row, keys) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: 'aa',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, keys.map(k => /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, row[k])));\n  };\n\n  const addNewTenant = (e, value) => {\n    value = { ...value,\n      property_id: property\n    };\n    fetch(POST_TENANTS_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(value)\n    }).then(res => res.json()).then(data => {\n      handleClose();\n      console.log(data);\n      setTenants([...tenants, data.tenant]);\n      renderDetails(); // setProperties([...properties, data.property]);\n    });\n  }; //main return\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, issues !== 0 ? renderDetails() : null), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/properties'),\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, \"Go back\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: layout.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddTenant, {\n    addNewTenant: addNewTenant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }))));\n} //","map":{"version":3,"sources":["/Users/musta88/Development/code/Module4/property-managment/front-end-property-managment/src/components/dashboard/PropertyDetails.js"],"names":["React","useEffect","useState","Container","Button","Typography","Modal","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","AddTenant","Divider","POST_TENANTS_URL","useStyles","table","minWidth","getModalStyle","top","left","transform","modalStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","PropertyDetails","property","showAllProperties","history","styles","layout","modalStyle","open","setOpen","details","setDetails","tenants","setTenants","issues","setIssues","todos","setTodos","url","fetch","then","res","json","data","handleClose","renderDetails","newTenants","map","obj","first_name","last_name","dob","Email","email","newIssues","Message","message","Priority","priority","Completed","isCompleted","toString","replace","newTodos","address","length","generateTable","keys","Object","k","row","renderRows","addNewTenant","e","value","property_id","method","headers","body","JSON","stringify","console","log","tenant","push"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport AddTenant from '../forms/AddTenant';\nimport Divider from '@material-ui/core/Divider';\n\nconst POST_TENANTS_URL = 'http://localhost:3001/tenants';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\n\n//related to the modal\nfunction getModalStyle() {\n  const top = 30;\n  const left = 40;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n//related to the modal\nconst modalStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function PropertyDetails({property, showAllProperties, history}) {\n    const styles = useStyles();\n\n    //related to the modal\n    const layout = modalStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    \n    //load the property details\n    const [details, setDetails] = useState(0);\n    const [tenants, setTenants] = useState(0);\n    const [issues, setIssues] = useState(0);\n    const [todos, setTodos] = useState(0);\n\n    useEffect(() => {\n        const url = `http://localhost:3001/properties/${property}`\n        fetch(url)\n          .then(res => res.json())\n          .then(data => {\n            setDetails(data.property);\n            setTenants(data.tenants);\n            setTodos(data.todos);\n            setIssues(data.issues);\n          });\n    }, [])\n\n    //close the modal\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    // render the details after is loaded\n    const renderDetails = () =>{\n        const newTenants = tenants.map(obj => ({\n            \"Full Name\": obj.first_name + \" \" + obj.last_name,\n            \"Date of Birth\" : obj.dob,\n            Email: obj.email\n          }))\n\n          const newIssues = issues.map(obj => ({\n            Message: obj.message,\n            Priority : obj.priority,\n            Completed : obj.isCompleted.toString().replace('false', 'No').replace('true', 'Yes')\n          }))\n\n          const newTodos = todos.map(obj => ({\n            Message: obj.message,\n            Completed : obj.isCompleted.toString().replace('false', 'No').replace('true', 'Yes')\n          }))\n          \n          \n        return(\n            <React.Fragment>\n                <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n                    {details.address}\n                </Typography>\n                <Typography variant=\"h5\" gutterBottom>\n                    Tenants at this property:\n                </Typography>\n                {tenants.length === 0 ? <h1>No tenants yet</h1> : generateTable(newTenants)}\n                <br/>\n\n                <Button \n                  onClick={() => setOpen(true)} \n                  variant=\"contained\" \n                  color=\"primary\">\n                  Add New Tenant\n                </Button>\n\n\n                <br/><br/><Divider /><br/>\n                <Typography variant=\"h5\" gutterBottom>\n                    Issues on this property:\n                </Typography>\n                {issues.length === 0 ? <h1>No issues for this property yet</h1> : generateTable(newIssues)}\n                <br/><br/><Divider /><br/>\n                <Typography variant=\"h5\" gutterBottom>\n                    Todos for this property:\n                </Typography>\n                {todos.length === 0 ? <h1>No todos for this property yet</h1> : generateTable(newTodos)}\n                <br/><br/><Divider /><br/>\n            </React.Fragment>\n        )\n    }\n   \n    //generate table for each state (tenants, issues, and todos)\n    const generateTable = (newTenants) =>{\n        const keys = Object.keys(newTenants[0]);\n        return (\n            <TableContainer component={Paper}>\n                <Table className={styles.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n\n            {keys.map(k => (<TableCell key={k}>{k}</TableCell>) )}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {newTenants.map((row) => renderRows(row,keys))}\n        </TableBody>\n      </Table>\n            </TableContainer>\n        )\n    }\n\n    const renderRows = (row,keys) => {\n\n      return (\n        <TableRow key={'aa'}>\n        {keys.map(k => (\n          <TableCell component=\"th\" scope=\"row\">\n            {row[k]}\n          </TableCell>  \n        ))}\n      </TableRow>\n      )\n    }\n\n    const addNewTenant = (e, value) => {\n      value = {\n        ...value,\n        property_id : property\n      };\n          fetch(POST_TENANTS_URL, {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify(value)\n          })\n          .then(res => res.json())\n          .then(data => {\n            handleClose();\n            console.log(data);\n            setTenants([...tenants, data.tenant]);\n            renderDetails();\n            // setProperties([...properties, data.property]);\n  \n            \n            \n          });\n    }\n\n\n\n    //main return\n    return (\n        <Container maxWidth=\"xl\">\n            <div>{issues !== 0 ? renderDetails() : null}</div>\n            <Button onClick={() => history.push('/properties')} variant=\"contained\" color=\"primary\">Go back</Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                <div style={modalStyle} className={layout.paper}>\n                  <AddTenant addNewTenant={addNewTenant}/>\n                </div>\n            </Modal>\n        </Container>\n    )\n}\n\n// "]},"metadata":{},"sourceType":"module"}